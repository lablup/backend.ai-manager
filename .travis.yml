language: python
dist: xenial
sudo: required
cache: pip
addons:
  postgresql: "9.6"
services:
  - docker
  - postgresql
  - redis-server
addons:
  apt:
    packages:
    - libsnappy-dev

# stage decl.
stages:
  - name: test
  - name: deploy
    if: tag IS present

# build matrix for test stage
os:
  - linux
python:
  - "3.6"
  - "3.7"

install:
  - pip install -U pip setuptools
  - pip install -U -r requirements-ci.txt
  - mkdir -p ~/.config/backend.ai
  - psql -c 'create database testing;' -U postgres
  - cp config/ci.toml ~/.config/backend.ai/manager.toml
  - mkdir -p /tmp/scratches
  - mkdir -p /tmp/vfroot/local
  ## install backend.ai-agent from github
  #- cd ${HOME}/build/lablup
  #- git clone https://github.com/lablup/backend.ai-agent.git
  #- cd backend.ai-agent
  #- pip install -U -e .
  #- cd ../backend.ai-manager
before_script:
  # etcd
  - mkdir -p /tmp/etcd
  - docker run -d -p 2379:2379 -p 2380:2380
     -v /tmp/etcd:/etcd-data
     --name backendai-etcd
     quay.io/coreos/etcd:v3.3.12
     /usr/local/bin/etcd
     --name backendai-etcd
     --data-dir /etcd-data
     --listen-client-urls http://0.0.0.0:2379
     --advertise-client-urls http://0.0.0.0:2379
     --listen-peer-urls http://0.0.0.0:2380
     --initial-advertise-peer-urls http://0.0.0.0:2380
     --initial-cluster backendai-etcd=http://0.0.0.0:2380
     --initial-cluster-token backendai-etcd-token
     --initial-cluster-state new
     --auto-compaction-retention 1
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/config/docker/registry/index.docker.io "https://registry-1.docker.io"'
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/config/docker/registry/index.docker.io/username "lablup"'
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/config/redis/addr 127.0.0.1:6379'
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/volumes/_mount /tmp/vfroot'
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/volumes/_default_host local'
  # set capabilities to python binary
  - sudo setcap cap_sys_ptrace,cap_sys_admin,cap_dac_override+eip $(readlink -f $(which python))
  # pull minimal kernel images
  - docker pull lablup/lua:5.3-alpine3.8
script:
  - python -m flake8 src tests
  - python -m pytest -m 'not integration' -v --cov=src
after_success:
  - codecov

# stage def.
jobs:
  include:
    # test stage is implicitly included.
    - stage: deploy
      python: "3.6"
      install: skip
      script: skip
      deploy:
        on:
          tags: true
        provider: pypi
        distributions: sdist bdist_wheel
        skip_upload_docs: true
        user: "@token"
        password:
          secure: "GRqOstZHSwzVxVWEUIE4OEC9FR2yIggzhQBkNDMqXTrzx6NGOuk3gzJLuF9n0jvXMymB9nce6dLZdHfRlahDNokbJEOpdWddjl1bHSEpzH+YLIoVaNzVC7i2hx/aEKsK6uiqaY+LD+2dbWqDPT0eZdNl1JERWEKJD+Lc0d8rJxv88RfnpZx276M0cZZnmZlWWJXby0TtwTzS6gejU/1Sdasp+PFYUhhSNa/+g2xv9EptvdezHr9iPsmBiuMAG7CtEsFh4ShK74DOuOB4HBp6uPrPMeTbVvPLknAuPFlyUIpXEm0I2iBSa65VFWaVJyXhgINAu7NS+feI0Ow1Ap6Urf12mbAIHJwqhfrrIwC2bP+0hJfWqn1FaCUY26CROBz9BL8bviMrzSpYZ6pOL50g1OPSeJ3+NXrQtIUmOfreiha0rObRAJqITYWZxrw90fpoRckO9JQC0ssG/xiGbCXVdgP4K+LqpCT/4Z9KY/LTVHV5PGYT31EOu4J2o8p9FEjWPG4Jn5Hqab1Zp8A0Q4Y/V3Y0bA2+qidWgX5REkk4vGWLfEX2j3qQYl2QBrNFpBOs9M05MzDdjjSSiwJkrLDeS936Pxh0/LfuHO2s9fzyBe9PZ4B+Lc6T02rrmUj/tbO8ENtBfmcSsej83JWTo2RPWs1OygoC1pyAWfSs0X5YfHE="
  allow_failures:
    - python: "3.7"

notifications:
  webhooks:
    secure: "q/cRHikmt2PkdzP5Q9MoZ5gE0qIo/bn6fqSLvWoEbEljUS6QxM2jCgHxA3Yb+TH9yS0KW8LsgxvQBeGgnCMv1pdV0qTtVY9Wq9A4klccufkMKOTr3c/YscmekWeWgsjE9rdiGgMDcET2R6GzLN0mT7YS6sO8pfsPwPB+mx92SmsTrOab+e5sYZMMa5rE82wsSxnXCgf+Nk73Euda4GUno0OtoypyfPsQXjVyf3nhdlHnYgcER4QwjVxbACEJiUkCqA43qrI+oiLsGwlWzIVOMilWW9upgDN6yCm3z6yynPZMaaqAy08HilYYoZFGnUSC9BI6UH1lsk39EumBPnS9q6nMbMGXTbcayyjy6wi3pkxJVvwIBcIVMewRfJHS4gkMPx0WPUvp3YdlWjZ8DH8C5NYmpVSFhBHb8rO9FzMwttk2xk/sEUOM/+aAbI3kQDLzYQC2wdCP6AvxVbCo8h7l+oF+HibdSucr2lW+821KL2tzS8lpvjMHV2yj4Rmsa/lGoTT6WPHBzwA7WIJvj7LskL4bzUl6Y59w6l0fEbtiqAS+8a7Ji3U/WhBU6cerw4CMqg6H9MXjkifHFVD8Oxb1KidKSX339xeALWXATXHxTvMIj51sEe23GGaMCk2G7UxZ9IIdYoEoargbH6vvBhmLZcTL1LCueDnImWIepgGb7pg="
