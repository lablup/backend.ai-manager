Improve stability and synchronization of container-databse states
- Now all DB transactions use the "SERIALIZABLE" isolation level with explicit retries.
- Now DB transactions that includes only SELECT queries are marked as "read-only" so that
  the PostgreSQL engine could optimize concurrent access with the new isolation level.
  All future codes should use `beegin_readonly()` method from our own subclassed SQLAlchemy
  engine instance replacing all existing `db` context variables.
- Remove excessive database updates due to keypair API query counts and kernel API query counts.
  The keypair API query count is re-written to use Redis with one month retention. (#421)
  Now just calling an API does not trigger updates in the PostgreSQL database.
- Fix unnecessary database updates for agent heartbeats.
- Split many update-only DB transactions into smaller units, such as resource recalculation.
- Fix some of variable binding issues with nested functions inside loops.
- Apply event message coalescing to prevent event bursts (e.g., `DoScheduleEvent` fired after
  enqueueing new session requests) which hurts the database performance and potentially
  break the transaction isolation guarantees.
